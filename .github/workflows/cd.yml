name: CD - Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to create (e.g., v2.0.4)'
        required: true

jobs:
  test-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-test.txt

      - name: Run unit tests
        run: python -m unittest discover -v tests/

  build-windows-release:
    needs: test-release
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Read version
        id: version
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -match 'refs/tags/(.+)') {
            $TAG_NAME = $matches[1]
          } elseif ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            $TAG_NAME = '${{ github.event.inputs.version }}'
          } else {
            $TAG_NAME = $(Get-Content version.txt -Raw).Trim()
          }
          echo "VERSION=$TAG_NAME" >> $env:GITHUB_ENV
          echo "Tag/Version: $TAG_NAME"

      - name: Build executable
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-build.txt
          powershell -NoProfile -ExecutionPolicy Bypass -File .\build.ps1 -Clean

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: SCKillFeed-windows-${{ env.VERSION }}
          path: release/*.exe
          retention-days: 30

  create-release:
    needs: build-windows-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/(.+)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Creating release for version: $VERSION"

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: SCKillFeed-windows-${{ steps.version.outputs.version }}
          path: release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Changes in this release
            
            See the full changelog in the commit history.
            
            ## Downloads
            
            - **Windows**: `SCKillFeed-${{ steps.version.outputs.version }}.exe`
          files: release/*.exe
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') || contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

